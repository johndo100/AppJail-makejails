events {
        worker_connections 1024;
}

http {
        include       mime.types;
        default_type  application/octet-stream;

        upstream php {
                server unix:/var/run/php-fpm.sock;
        }

        server {
                # run it behind a reverse proxy
                listen 80;
                # remember to set your domain
                server_name "";
                # download shaarli file and unzip here
                root /usr/local/www/php;

		# log file locations
		# combined log format prepends the virtualhost/domain name to log entries
		access_log  /var/log/nginx/access.log combined;
		error_log   /var/log/nginx/error.log;

		# increase the maximum file upload size if needed: by default nginx limits file upload to 1MB (413 Entity Too Large error)
                client_max_body_size 100M;

                location / {
			# default index file when no file URI is requested
			index index.php;
			try_files _ /index.php$is_args$args;
                }

		location ~ (index)\.php$ {
			try_files $uri =404;
			# slim API - split URL path into (script_filename, path_info)
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			# pass PHP requests to PHP-FPM
			fastcgi_pass   php;
			fastcgi_index  index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include        fastcgi_params;
		}

		location ~ /doc/html/ {
			default_type "text/html";
			try_files $uri $uri/ $uri.html =404;
		}

		# allow client-side caching of static files
		location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|ttf|oet|woff2?)$ {
			expires    max;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
			# HTTP 1.0 compatibility
			add_header Pragma public;
		}
        }
}